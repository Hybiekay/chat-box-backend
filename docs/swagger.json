{
  "openapi": "3.0.0",
  "info": {
    "title": "Flint API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://api.mydomain.com"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Create a new and auth user",
        "responses": {
          "200": {
            "description": "user login successfully"
          },
          "500": {
            "description": "server error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Create a new token for register user",
        "responses": {
          "200": {
            "description": "user login successfully"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Register a new user",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the user"
          }
        ]
      }
    },
    "/users/": {
      "post": {
        "summary": "Create a new user",
        "responses": {
          "200": {
            "description": "User registered successfully"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ]
      },
      "delete": {
        "summary": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}